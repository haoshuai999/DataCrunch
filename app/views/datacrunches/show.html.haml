- if params[:user_login]
  %div.row
    %div.col-md-3
      %p= "Hello, " + params[:user_login]
    %div.col-md-3
      = form_tag datacrunches_path(params[:user_login] => nil), :method => 'get' do
        = submit_tag 'Log out', :class => 'btn btn-warning btn-sm', :id => 'logout'
%div.row
  %div.col-md-12 
    %h1.header= link_to "DataCrunch", datacrunches_path 

%div.row
  %div.col-md-6
    %p.fileinfo#filename 
      File name: 
      %strong #{@datacrunch.data_file_name}
    %p.fileinfo#title 
      File title: 
      %strong #{@datacrunch.title}

    %p.fileinfo#author 
      Author: 
      %strong= (@datacrunch.username != nil ? @datacrunch.username : "No Author") 
  

    %p.fileinfo#description 
      File description: 
      %strong #{@datacrunch.description}

    %p.fileinfo#filesize
      File size:
      %strong #{@dataSize} 

    %p.fileinfo#filedimensions
      Data dimensions:
      %strong #{@dataDimensions} 

  
    //Tried adding material design icon to this button. It seems like you cannot have both text and an icon at the same time, unless we change the html tag to <button> instead of <input>
    //However, it does not seem possible to make a post request (which we would need for the more cols and rows buttons) with just a button.
    //Instead we might need to wrap it in form_tag.
    = button_to 'Download', datacrunches_download_path(:id => @datacrunch), :class => "btn btn-success download-btn"
    -# = button_to 'get_app', datacrunches_download_path(:id => @datacrunch), :class => "btn btn-success download-btn material-icons"
  

/ Button trigger modal
-# %button.btn.btn-primary{"data-target" => "#statsModal", "data-toggle" => "modal", :type => "button"} Launch demo modal
#statsModal.modal.hide.fade{"aria-hidden" => "true", "aria-labelledby" => "statsModalLabel", :role => "dialog"}
  .modal-dialog{:role => "document"}
    .modal-content



%div.row
  %div.col-5.text-right
    %table.table.sd_table
      %tr
        %td.legend_bottom_point_one 
          %span bottom 0.1%
        %td.legend_bottom_two 
          %span bottom 2.0%
        %td.legend_top_two 
          %span Top 2.0%
        %td.legend_top_point_one 
          %span Top 0.1%
  %div.col-3
  %div.col-3.btn-group
    %span.dim-buttons= button_to 'Fewer columns', datacrunch_path(@datacrunch), params: {:cols => @ncols-10, :rows => @nrows}, :method => :get, :disabled => (@ncols <= 10 ? "disabled": false), :class => (@ncols <= 10 ? 'btn-sm btn-secondary': 'btn-sm btn-primary') 
    %span.dim-buttons= button_to 'More columns', datacrunch_path(@datacrunch), params: {:cols => @ncols+10, :rows => @nrows}, :method => :get, :disabled => (@dataframe.ncols > @ncols ? false : "disabled"), :class => (@dataframe.ncols > @ncols ? 'btn-sm btn-primary' : 'btn-sm btn-secondary') 
  
%div.row
  %div.col.table-col
    %table.table
      %tr.headers
        - @display_dataframe.vectors.each  do |col| #displays the column names
          %td.colname
            -# %div.material-icons search //search icon does not look good. Can't get it on a single line
            = link_to col, datacrunches_colstats_path(:colname => col, :id => @datacrunch.id), {:remote => true, 'data-toggle' => "modal", 'data-target' => "#statsModal"}
        - @display_dataframe.each_row_with_index do |r, row_index| #displays the dataframe contents
          %tr.table-data
            - r.each_with_index do |c, col_index| 
              %td{ :class => cell_class(@stdev_df[col_index][row_index]) }= c #cell_class is called in datacrunches_helper.rb

%div.row
  %div.col.btn-group
    %span.dim-buttons= button_to 'Fewer rows', datacrunch_path(@datacrunch), params: {:cols => @ncols, :rows => @nrows-10}, :method => :get, :disabled => (@nrows <= 10 ? "disabled": false), :class => (@nrows <= 10 ? 'btn-sm btn-secondary': 'btn-sm btn-primary') 
    %span.dim-buttons= button_to 'More rows', datacrunch_path(@datacrunch), params: {:cols => @ncols, :rows => @nrows+10}, :method => :get, :disabled => (@dataframe.nrows > @nrows ? false : "disabled"), :class => (@dataframe.nrows > @nrows ? 'btn-sm btn-primary' : 'btn-sm btn-secondary') 
  
    
       