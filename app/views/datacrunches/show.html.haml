%h1= link_to "Datacrunch", datacrunches_path 

%p#filename 
    File name: 
    %strong #{@datacrunch.data_file_name}
%p#title 
    File title: 
    %strong #{@datacrunch.title}
%p#description 
    File description: 
    %strong #{@datacrunch.description}
%p#filesize
    File size:
    %strong #{@dataSize} 
%p#filedimensions
    Data dimensions:
    %strong #{@dataDimensions} 

////////////////////////////////////////
//MODAL TESTING
//////////////////////////////////////////
/ Button trigger modal
%button.btn.btn-primary{"data-target" => "#statsModal", "data-toggle" => "modal", :type => "button"} Launch demo modal
/ Modal
#statsModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "statsModalLabel", :role => "dialog", :tabindex => "-1"}
    .modal-dialog{:role => "document"}
        .modal-content
            .modal-header
                %h5#statsModalLabel.modal-title #{@datacrunch.title}
                %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                %span{"aria-hidden" => "true"} Ã—
            #statsModalBody.modal-body
                %div#histogram
           
////////////////////////////////////////////////////////////


//TODO: fix more dimension buttons to fade out after max cols/rows reached
%h3= link_to 'More columns', datacrunch_path(@datacrunch, :cols => flash[:cols]+10, :rows => flash[:rows]), :method => :get, :class => 'btn btn-primary'
%h3= link_to 'More rows', datacrunch_path(@datacrunch, :cols => flash[:cols], :rows => flash[:rows]+10), :method => :get, :class => 'btn btn-primary'

%table
    %tr{"data-target" => "#statsModal", "data-toggle" => "modal"}
    - @display_dataframe.vectors.each  do |col| #displays the column names
        %td.colname= link_to col, datacrunch_path(@datacrunch, :cols => flash[:cols], :rows => flash[:rows]), data: {toggle: "modal", target: "#statsModal"}, :id => col 
    - @display_dataframe.each(axis = :row) do |r| #displays the dataframe contents
        %tr
        - r.each do |c| 
            %td= c